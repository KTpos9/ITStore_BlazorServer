@page "/register"

@inject MemberData _db
@inject NavigationManager NavManager

<PageTitle>Register</PageTitle>

<section>
    <h2>Register</h2>
    <EditForm OnValidSubmit="@InsertMember" style="width:22rem" EditContext="@EC">
        <DataAnnotationsValidator />
        <ValidationSummary />

      <MatThemeProvider Theme=@theme1>
            <MatTextField @bind-Value="@newMember.Name" Label="First Name" FullWidth="true" Class="mb-4 mt-4"></MatTextField>
            <MatTextField @bind-Value="@newMember.LastName" Label="Last Name" FullWidth="true" Class="mb-4 mt-4"></MatTextField>
            <MatTextField @bind-Value="@newMember.Email" Label="Email" FullWidth="true" Class="mb-4 mt-4"></MatTextField>
            <MatTextField @bind-Value="@newMember.Password" Label="Password" FullWidth="true" Class="mb-4 mt-4" Type="password"></MatTextField>
            <MatTextField @bind-Value="@newMember.ConfirmPassword" Label="Confirm Password" FullWidth="true" Class="mb-4" Type="password"></MatTextField>
      </MatThemeProvider>

      <!-- Submit button -->
      <button type="submit" class="btn btn-primary btn-block mb-4" @onclick=SignIn disabled="@(!context.Validate())">Register</button>
    </EditForm>
</section>
@code {
    private EditContext EC { get; set; }
    private string Email;
    private MemberRegisterModel newMember = new MemberRegisterModel();
    MatTheme theme1 = new MatTheme
    {
        Primary = MatThemeColors.Blue.A400.Value
    };
    protected override Task OnInitializedAsync()
    {
        EC = new EditContext(newMember);
        return base.OnInitializedAsync();
    }
    private async Task InsertMember()
    {
        Member m = new Member
        {
            FirstName = newMember.Name,
            LastName = newMember.LastName,
            Email = newMember.Email,
            Password = newMember.Password,
            Role = "User"
        };
        await _db.InsertMember(m);
    }
    private void SignIn()
    {
        if (EC.Validate())
        {
            NavManager.NavigateTo("/");
        }
    }
}
